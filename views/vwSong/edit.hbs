{{#section 'css'}}
<link rel="stylesheet"
    href="https://cdnjs.cloudflare.com/ajax/libs/jquery-datetimepicker/2.5.20/jquery.datetimepicker.min.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-fileinput/5.1.3/css/fileinput.min.css">

{{/section}}

{{#section 'js'}}
{{!-- File Upload> --}}
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-fileinput/5.1.3/js/fileinput.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-fileinput/5.1.3/themes/fa/theme.min.js"></script>

<script>
    $('#fileAvatar').fileinput({
        theme: 'fa',
        allowedFileExtensions: ['jpg', 'png'],
        dropZoneEnabled: false,
        maxImageWidth: 350,
        maxImageHeight: 350,
        resizeImage: true,
    });

    $('#fileUri').fileinput({
        theme: 'fa',
        allowedFileExtensions: ['mp3'],
        dropZoneEnabled: false,
    });
</script>

<script>
    $("#txtCategoryId").val($("#txtCategoryIdTemp").val());
    $("#txtArtistId").val($("#txtArtistIdTemp").val());

    $('#frmEdit').on('submit', function (e) {
        e.preventDefault();
        const name = $('#txtName').val();
        const categoryId = $('#txtCategoryId').val();

        if (name.length === 0) {
            Swal.fire({
                title: 'Error!',
                text: 'Invalid Name',
                icon: 'error',
                confirmButtonText: 'Retry'
            })
            return;
        } else {
            Swal.fire({
                position: 'center',
                icon: 'success',
                title: 'Change successfully',
                showConfirmButton: false,
                timer: 1000
            }).then(async function () {
                if (!($('#fileAvatar').get(0).files.length === 0)) {
                    await uploadImage();
                }

                if (!($('#fileUri').get(0).files.length === 0)) {
                    await uploadUri();
                }
                $('#frmEdit').off('submit').submit();
            });

        }
    })
</script>
{{!-- Firebase-Storage --}}
<script src="https://www.gstatic.com/firebasejs/8.3.3/firebase-app.js"></script>
<script src="https://www.gstatic.com/firebasejs/8.3.3/firebase-storage.js"></script>

<script>
    var firebaseConfig = {
        apiKey: "AIzaSyCPiohcfxfeYf5hSRaFgcNYtaWPGys_-Ao",
        authDomain: "tinmuser.firebaseapp.com",
        databaseURL: "https://tinmuser-default-rtdb.firebaseio.com",
        projectId: "tinmuser",
        storageBucket: "tinmuser.appspot.com",
        messagingSenderId: "963218315977",
        appId: "1:963218315977:web:4e1475ccbcb065110e4b18"
    };
    firebase.initializeApp(firebaseConfig);
    console.log(firebase);

    async function uploadImage() {
        const ref = firebase.storage().ref();

        const image_file = document.querySelector("#fileAvatar").files[0];

        const fname = Date.now() + '-' + image_file.name;

        const metadata = {
            contentType: image_file.type
        }


        const old_img_url = $('#txtPreviewAvatar').val();
        if (old_img_url) {
            console.log("old if: " + old_img_url);

            //get file name from url
            let url_list = old_img_url.split("%2F");
            let del_file_name = url_list[url_list.length - 1].split("?")[0];
            console.log("del_file_name" + del_file_name);

            //delete old img
            const delete_task = ref.child('images/songs/' + del_file_name);
            await delete_task.delete().then(() => {
                console.log("Old image deleted")
            });

        }

        const upload_task = ref.child("images/songs/" + fname).put(image_file, metadata);
        await upload_task
            .then(snapshot => snapshot.ref.getDownloadURL())
            .then(url => {
                ;
                $("#txtAvatar").val(url);
                alert("Image Upload success !!");
            })
    }

    async function uploadUri() {
        const ref = firebase.storage().ref();

        const mp3_file = document.querySelector("#fileUri").files[0];

        const fname = Date.now() + '-' + mp3_file.name;

        const metadata = {
            contentType: mp3_file.type
        }


        const old_uri_link = $('#txtPreviewUri').val();
        if (old_uri_link) {
            console.log("old if: " + old_uri_link);

            //get file name from url
            let url_list = old_uri_link.split("%2F");
            let del_file_name = url_list[url_list.length - 1].split("?")[0];
            console.log("del_file_name" + del_file_name);

            //delete old img
            const delete_task = ref.child('songs/' + del_file_name);
            await delete_task.delete().then(() => {
                console.log("Old song deleted")
            });

        }

        const upload_task = ref.child("songs/" + fname).put(mp3_file, metadata);
        await upload_task
            .then(snapshot => snapshot.ref.getDownloadURL())
            .then(url => {
                $("#txtUri").val(url);
                alert("Song upload success !!");
            })
    }
</script>
{{/section}}

<div class="card">
    <div class="card-header">
        <h4>New Song Files</h4>
    </div>
    <div class="card-body">
        <div class="form-group">
            <label for="txtAvatar">New Avatar</label>
            <input type="file" class="form-control-file" id="fileAvatar" name="avatar">
        </div>

        <div class="form-group">
            <label for="txtUri">New MP3 File</label>
            <input type="file" class="form-control-file" id="fileUri" name="uri">
        </div>

    </div>
</div>
<form id="frmEdit" method="POST" action="">
    <div class="card">
        <div class="card-header">
            <h4>Song's Information</h4>
        </div>
        <div class="card-body">
            <div class="form-group">
                <label for="txtID">#ID</label>
                <input type="text" class="form-control" id="txtID" name="id" readonly value="{{this.song.id}}">
            </div>

            <div class="form-group">
                <label>Preview Avatar</label> <br>
                <img style="width: 200px;" src="{{this.song.imageURL}}" alt="no preview image found">
            </div>
            <div class="form-group">
                <label>Preview Song</label> <br>
                <audio controls>
                    <source type="audio/mpeg" src="{{this.song.uri}}" alt="no preview song found">
                </audio>
            </div>

            <input type="hidden" value="{{this.song.imageURL}}" name="previewAvatar" id="txtPreviewAvatar">
            <input type="hidden" value="{{this.song.uri}}" name="previewUri" id="txtPreviewUri">

            <input type="hidden" value="" name="avatar" id="txtAvatar">
            <input type="hidden" value="" name="uri" id="txtUri">

            <div class="form-group">
                <label for="txtEmail">Name</label>
                <input type="text" class="form-control" id="txtName" name="name" value="{{this.song.name}}">
            </div>

            <div class="form-group d-flex justify-content-between">
                <label for="txtCategory" class="my-1"><b>Category ID</b></label>
                <input type="hidden" class="form-control" id="txtCategoryIdTemp" name="categoryIdTemp"
                    value="{{this.song.categoryId}}">
                <select name='categoryId' id="txtCategoryId" value="{{this.song.categoryId}}">
                    {{#each listCategories}}
                    <option value="{{id}}" style="text-transform: capitalize;">{{name}}</option>
                    {{/each}}
                </select>
                <label for="txtArtist" class="my-1"><b>Artist ID</b></label>
                <input type="hidden" class="form-control" id="txtArtistIdTemp" name="artistIdTemp"
                    value="{{this.song.artistId}}">
                <select name='artistId' id="txtArtistId" value="{{this.song.artistId}}">
                    {{#each listArtists}}
                    <option value="{{id}}" style="text-transform: capitalize;">{{name}}</option>
                    {{/each}}
                </select>
            </div>
            <div class="form-group">
                <label for="txtCreatedAt">Created at</label>
                <input type="text" class="form-control" id="txtCreatedAt" name="createdAt" readonly
                    value="{{this.song.createdAt}}">
            </div>

        </div>
        <div class="card-footer">
            <a class="btn btn-primary" href="/admin/users" role="button">
                <i class="fa fa-backward" aria-hidden="true"></i>
                Back to List
            </a>
            <button class="btn btn-success" type="submit">
                <i class="fa fa-check" aria-hidden="true"></i>
                Save
            </button>
        </div>
    </div>
</form>